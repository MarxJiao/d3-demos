!function(t){var n={};function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(n){return t[n]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=16)}([function(t,n,e){"use strict";var i="http://www.w3.org/1999/xhtml",r={svg:"http://www.w3.org/2000/svg",xhtml:i,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},a=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),r.hasOwnProperty(n)?{space:r[n],local:t}:t};var o=function(t){var n=a(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===i&&n.documentElement.namespaceURI===i?n.createElement(t):n.createElementNS(e,t)}})(n)};function c(){}var u=function(t){return null==t?c:function(){return this.querySelector(t)}};function s(){return[]}var f=function(t){return null==t?s:function(){return this.querySelectorAll(t)}},h=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var l=document.documentElement;if(!l.matches){var _=l.webkitMatchesSelector||l.msMatchesSelector||l.mozMatchesSelector||l.oMatchesSelector;h=function(t){return function(){return _.call(this,t)}}}}var d=h,p=function(t){return new Array(t.length)};function b(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}b.prototype={constructor:b,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var y="$";function g(t,n,e,i,r,a){for(var o,c=0,u=n.length,s=a.length;c<s;++c)(o=n[c])?(o.__data__=a[c],i[c]=o):e[c]=new b(t,a[c]);for(;c<u;++c)(o=n[c])&&(r[c]=o)}function x(t,n,e,i,r,a,o){var c,u,s,f={},h=n.length,l=a.length,_=new Array(h);for(c=0;c<h;++c)(u=n[c])&&(_[c]=s=y+o.call(u,u.__data__,c,n),s in f?r[c]=u:f[s]=u);for(c=0;c<l;++c)(u=f[s=y+o.call(t,a[c],c,a)])?(i[c]=u,u.__data__=a[c],f[s]=null):e[c]=new b(t,a[c]);for(c=0;c<h;++c)(u=n[c])&&f[_[c]]===u&&(r[c]=u)}function v(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var m=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function w(t,n){return t.style.getPropertyValue(n)||m(t).getComputedStyle(t,null).getPropertyValue(n)}function M(t){return t.trim().split(/^|\s+/)}function T(t){return t.classList||new N(t)}function N(t){this._node=t,this._names=M(t.getAttribute("class")||"")}function k(t,n){for(var e=T(t),i=-1,r=n.length;++i<r;)e.add(n[i])}function S(t,n){for(var e=T(t),i=-1,r=n.length;++i<r;)e.remove(n[i])}N.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function C(){this.textContent=""}function A(){this.innerHTML=""}function j(){this.nextSibling&&this.parentNode.appendChild(this)}function O(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function E(){return null}function U(){var t=this.parentNode;t&&t.removeChild(this)}function D(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function P(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Y={},F=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Y={mouseenter:"mouseover",mouseleave:"mouseout"}));function q(t,n,e){return t=L(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function L(t,n,e){return function(i){var r=F;F=i;try{t.call(this,this.__data__,n,e)}finally{F=r}}}function H(t){return function(){var n=this.__on;if(n){for(var e,i=0,r=-1,a=n.length;i<a;++i)e=n[i],t.type&&e.type!==t.type||e.name!==t.name?n[++r]=e:this.removeEventListener(e.type,e.listener,e.capture);++r?n.length=r:delete this.__on}}}function $(t,n,e){var i=Y.hasOwnProperty(t.type)?q:L;return function(r,a,o){var c,u=this.__on,s=i(n,a,o);if(u)for(var f=0,h=u.length;f<h;++f)if((c=u[f]).type===t.type&&c.name===t.name)return this.removeEventListener(c.type,c.listener,c.capture),this.addEventListener(c.type,c.listener=s,c.capture=e),void(c.value=n);this.addEventListener(t.type,s,e),c={type:t.type,name:t.name,value:n,listener:s,capture:e},u?u.push(c):this.__on=[c]}}function z(t,n,e,i){var r=F;t.sourceEvent=F,F=t;try{return n.apply(e,i)}finally{F=r}}function X(t,n,e){var i=m(t),r=i.CustomEvent;"function"==typeof r?r=new r(n,e):(r=i.document.createEvent("Event"),e?(r.initEvent(n,e.bubbles,e.cancelable),r.detail=e.detail):r.initEvent(n,!1,!1)),t.dispatchEvent(r)}var R=[null];function I(t,n){this._groups=t,this._parents=n}function V(){return new I([[document.documentElement]],R)}I.prototype=V.prototype={constructor:I,select:function(t){"function"!=typeof t&&(t=u(t));for(var n=this._groups,e=n.length,i=new Array(e),r=0;r<e;++r)for(var a,o,c=n[r],s=c.length,f=i[r]=new Array(s),h=0;h<s;++h)(a=c[h])&&(o=t.call(a,a.__data__,h,c))&&("__data__"in a&&(o.__data__=a.__data__),f[h]=o);return new I(i,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=f(t));for(var n=this._groups,e=n.length,i=[],r=[],a=0;a<e;++a)for(var o,c=n[a],u=c.length,s=0;s<u;++s)(o=c[s])&&(i.push(t.call(o,o.__data__,s,c)),r.push(o));return new I(i,r)},filter:function(t){"function"!=typeof t&&(t=d(t));for(var n=this._groups,e=n.length,i=new Array(e),r=0;r<e;++r)for(var a,o=n[r],c=o.length,u=i[r]=[],s=0;s<c;++s)(a=o[s])&&t.call(a,a.__data__,s,o)&&u.push(a);return new I(i,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each(function(t){d[++f]=t}),d;var e,i=n?x:g,r=this._parents,a=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var o=a.length,c=new Array(o),u=new Array(o),s=new Array(o),f=0;f<o;++f){var h=r[f],l=a[f],_=l.length,d=t.call(h,h&&h.__data__,f,r),p=d.length,b=u[f]=new Array(p),y=c[f]=new Array(p);i(h,l,b,y,s[f]=new Array(_),d,n);for(var v,m,w=0,M=0;w<p;++w)if(v=b[w]){for(w>=M&&(M=w+1);!(m=y[M])&&++M<p;);v._next=m||null}}return(c=new I(c,r))._enter=u,c._exit=s,c},enter:function(){return new I(this._enter||this._groups.map(p),this._parents)},exit:function(){return new I(this._exit||this._groups.map(p),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,i=n.length,r=e.length,a=Math.min(i,r),o=new Array(i),c=0;c<a;++c)for(var u,s=n[c],f=e[c],h=s.length,l=o[c]=new Array(h),_=0;_<h;++_)(u=s[_]||f[_])&&(l[_]=u);for(;c<i;++c)o[c]=n[c];return new I(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var i,r=t[n],a=r.length-1,o=r[a];--a>=0;)(i=r[a])&&(o&&o!==i.nextSibling&&o.parentNode.insertBefore(i,o),o=i);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=v);for(var e=this._groups,i=e.length,r=new Array(i),a=0;a<i;++a){for(var o,c=e[a],u=c.length,s=r[a]=new Array(u),f=0;f<u;++f)(o=c[f])&&(s[f]=o);s.sort(n)}return new I(r,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var i=t[n],r=0,a=i.length;r<a;++r){var o=i[r];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,i=n.length;e<i;++e)for(var r,a=n[e],o=0,c=a.length;o<c;++o)(r=a[o])&&t.call(r,r.__data__,o,a);return this},attr:function(t,n){var e=a(t);if(arguments.length<2){var i=this.node();return e.local?i.getAttributeNS(e.space,e.local):i.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var i=n.apply(this,arguments);null==i?this.style.removeProperty(t):this.style.setProperty(t,i,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):w(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=M(t+"");if(arguments.length<2){for(var i=T(this.node()),r=-1,a=e.length;++r<a;)if(!i.contains(e[r]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?k:S)(this,t)}}:n?function(t){return function(){k(this,t)}}:function(t){return function(){S(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?C:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?A:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(j)},lower:function(){return this.each(O)},append:function(t){var n="function"==typeof t?t:o(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:o(t),i=null==n?E:"function"==typeof n?n:u(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),i.apply(this,arguments)||null)})},remove:function(){return this.each(U)},clone:function(t){return this.select(t?P:D)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var i,r,a=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),o=a.length;if(!(arguments.length<2)){for(c=n?$:H,null==e&&(e=!1),i=0;i<o;++i)this.each(c(a[i],n,e));return this}var c=this.node().__on;if(c)for(var u,s=0,f=c.length;s<f;++s)for(i=0,u=c[s];i<o;++i)if((r=a[i]).type===u.type&&r.name===u.name)return u.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return X(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return X(this,t,n)}})(t,n))}};var Z=V,B=function(t){return"string"==typeof t?new I([[document.querySelector(t)]],[document.documentElement]):new I([[t]],R)},W=0;function Q(){this._="@"+(++W).toString(36)}Q.prototype=function(){return new Q}.prototype={constructor:Q,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var J=function(){for(var t,n=F;t=n.sourceEvent;)n=t;return n},G=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var i=e.createSVGPoint();return i.x=n.clientX,i.y=n.clientY,[(i=i.matrixTransform(t.getScreenCTM().inverse())).x,i.y]}var r=t.getBoundingClientRect();return[n.clientX-r.left-t.clientLeft,n.clientY-r.top-t.clientTop]},K=function(t){var n=J();return n.changedTouches&&(n=n.changedTouches[0]),G(t,n)},tt=function(t,n,e){arguments.length<3&&(e=n,n=J().changedTouches);for(var i,r=0,a=n?n.length:0;r<a;++r)if((i=n[r]).identifier===e)return G(t,i);return null};e.d(n,"c",function(){return d}),e.d(n,"d",function(){return K}),e.d(n,"e",function(){return a}),e.d(n,"f",function(){return B}),e.d(n,"g",function(){return Z}),e.d(n,"h",function(){return u}),e.d(n,"i",function(){return f}),e.d(n,"j",function(){return w}),e.d(n,"k",function(){return tt}),e.d(n,"b",function(){return F}),e.d(n,"a",function(){return z})},function(t,n,e){"use strict";var i=new Date,r=new Date;function a(t,n,e,o){function c(n){return t(n=new Date(+n)),n}return c.floor=c,c.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},c.round=function(t){var n=c(t),e=c.ceil(t);return t-n<e-t?n:e},c.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},c.range=function(e,i,r){var a,o=[];if(e=c.ceil(e),r=null==r?1:Math.floor(r),!(e<i&&r>0))return o;do{o.push(a=new Date(+e)),n(e,r),t(e)}while(a<e&&e<i);return o},c.filter=function(e){return a(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,i){if(t>=t)if(i<0)for(;++i<=0;)for(;n(t,-1),!e(t););else for(;--i>=0;)for(;n(t,1),!e(t););})},e&&(c.count=function(n,a){return i.setTime(+n),r.setTime(+a),t(i),t(r),Math.floor(e(i,r))},c.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?c.filter(o?function(n){return o(n)%t==0}:function(n){return c.count(0,n)%t==0}):c:null}),c}var o=a(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});o.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?a(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):o:null};var c=o,u=(o.range,6e4),s=6048e5,f=a(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),h=f,l=(f.range,a(function(t){t.setTime(Math.floor(t/u)*u)},function(t,n){t.setTime(+t+n*u)},function(t,n){return(n-t)/u},function(t){return t.getMinutes()})),_=l,d=(l.range,a(function(t){var n=t.getTimezoneOffset()*u%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),p=d,b=(d.range,a(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*u)/864e5},function(t){return t.getDate()-1})),y=b;b.range;function g(t){return a(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*u)/s})}var x=g(0),v=g(1),m=g(2),w=g(3),M=g(4),T=g(5),N=g(6),k=(x.range,v.range,m.range,w.range,M.range,T.range,N.range,a(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),S=k,C=(k.range,a(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));C.every=function(t){return isFinite(t=Math.floor(t))&&t>0?a(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var A=C,j=(C.range,a(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*u)},function(t,n){return(n-t)/u},function(t){return t.getUTCMinutes()})),O=j,E=(j.range,a(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),U=E,D=(E.range,a(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),P=D;D.range;function Y(t){return a(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/s})}var F=Y(0),q=Y(1),L=Y(2),H=Y(3),$=Y(4),z=Y(5),X=Y(6),R=(F.range,q.range,L.range,H.range,$.range,z.range,X.range,a(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),I=R,V=(R.range,a(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));V.every=function(t){return isFinite(t=Math.floor(t))&&t>0?a(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var Z=V;V.range;e.d(n,"c",function(){return c}),e.d(n,"n",function(){return c}),e.d(n,"g",function(){return h}),e.d(n,"r",function(){return h}),e.d(n,"d",function(){return _}),e.d(n,"b",function(){return p}),e.d(n,"a",function(){return y}),e.d(n,"j",function(){return x}),e.d(n,"h",function(){return x}),e.d(n,"e",function(){return v}),e.d(n,"i",function(){return M}),e.d(n,"f",function(){return S}),e.d(n,"k",function(){return A}),e.d(n,"o",function(){return O}),e.d(n,"m",function(){return U}),e.d(n,"l",function(){return P}),e.d(n,"u",function(){return F}),e.d(n,"s",function(){return F}),e.d(n,"p",function(){return q}),e.d(n,"t",function(){return $}),e.d(n,"q",function(){return I}),e.d(n,"v",function(){return Z})},function(t,n,e){"use strict";var i=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},r=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return i(n(t),e)}),{left:function(n,e,i,r){for(null==i&&(i=0),null==r&&(r=n.length);i<r;){var a=i+r>>>1;t(n[a],e)<0?i=a+1:r=a}return i},right:function(n,e,i,r){for(null==i&&(i=0),null==r&&(r=n.length);i<r;){var a=i+r>>>1;t(n[a],e)>0?r=a:i=a+1}return i}}};var a=r(i),o=a.right,c=(a.left,o);var u=function(t){return null===t?NaN:+t},s=Array.prototype,f=(s.slice,s.map,function(t,n,e){t=+t,n=+n,e=(r=arguments.length)<2?(n=t,t=0,1):r<3?1:+e;for(var i=-1,r=0|Math.max(0,Math.ceil((n-t)/e)),a=new Array(r);++i<r;)a[i]=t+i*e;return a}),h=Math.sqrt(50),l=Math.sqrt(10),_=Math.sqrt(2),d=function(t,n,e){var i,r,a,o,c=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((i=n<t)&&(r=t,t=n,n=r),0===(o=p(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),a=new Array(r=Math.ceil(n-t+1));++c<r;)a[c]=(t+c)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),a=new Array(r=Math.ceil(t-n+1));++c<r;)a[c]=(t-c)/o;return i&&a.reverse(),a};function p(t,n,e){var i=(n-t)/Math.max(0,e),r=Math.floor(Math.log(i)/Math.LN10),a=i/Math.pow(10,r);return r>=0?(a>=h?10:a>=l?5:a>=_?2:1)*Math.pow(10,r):-Math.pow(10,-r)/(a>=h?10:a>=l?5:a>=_?2:1)}function b(t,n,e){var i=Math.abs(n-t)/Math.max(0,e),r=Math.pow(10,Math.floor(Math.log(i)/Math.LN10)),a=i/r;return a>=h?r*=10:a>=l?r*=5:a>=_&&(r*=2),n<t?-r:r}var y=function(t,n,e){if(null==e&&(e=u),i=t.length){if((n=+n)<=0||i<2)return+e(t[0],0,t);if(n>=1)return+e(t[i-1],i-1,t);var i,r=(i-1)*n,a=Math.floor(r),o=+e(t[a],a,t);return o+(+e(t[a+1],a+1,t)-o)*(r-a)}},g=function(t,n){var e,i,r=t.length,a=-1;if(null==n){for(;++a<r;)if(null!=(e=t[a])&&e>=e)for(i=e;++a<r;)null!=(e=t[a])&&e>i&&(i=e)}else for(;++a<r;)if(null!=(e=n(t[a],a,t))&&e>=e)for(i=e;++a<r;)null!=(e=n(t[a],a,t))&&e>i&&(i=e);return i},x=function(t){for(var n,e,i,r=t.length,a=-1,o=0;++a<r;)o+=t[a].length;for(e=new Array(o);--r>=0;)for(n=(i=t[r]).length;--n>=0;)e[--o]=i[n];return e},v=function(t,n,e){for(var i,r,a=(null==e?t.length:e)-(n=null==n?0:+n);a;)r=Math.random()*a--|0,i=t[a+n],t[a+n]=t[r+n],t[r+n]=i;return t},m=function(t,n){var e,i=t.length,r=-1,a=0;if(null==n)for(;++r<i;)(e=+t[r])&&(a+=e);else for(;++r<i;)(e=+n(t[r],r,t))&&(a+=e);return a};e.d(n,"b",function(){return c}),e.d(n,"a",function(){return i}),e.d(n,"c",function(){return r}),e.d(n,"d",function(){return g}),e.d(n,"e",function(){return x}),e.d(n,"f",function(){return y}),e.d(n,"g",function(){return f}),e.d(n,"h",function(){return v}),e.d(n,"i",function(){return m}),e.d(n,"l",function(){return d}),e.d(n,"j",function(){return p}),e.d(n,"k",function(){return b})},function(t,n,e){"use strict";var i=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function r(t,n){var e=Object.create(t.prototype);for(var i in n)e[i]=n[i];return e}function a(){}var o="\\s*([+-]?\\d+)\\s*",c="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",u="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",s=/^#([0-9a-f]{3})$/,f=/^#([0-9a-f]{6})$/,h=new RegExp("^rgb\\("+[o,o,o]+"\\)$"),l=new RegExp("^rgb\\("+[u,u,u]+"\\)$"),_=new RegExp("^rgba\\("+[o,o,o,c]+"\\)$"),d=new RegExp("^rgba\\("+[u,u,u,c]+"\\)$"),p=new RegExp("^hsl\\("+[c,u,u]+"\\)$"),b=new RegExp("^hsla\\("+[c,u,u,c]+"\\)$"),y={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function g(t){var n;return t=(t+"").trim().toLowerCase(),(n=s.exec(t))?new M((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=f.exec(t))?x(parseInt(n[1],16)):(n=h.exec(t))?new M(n[1],n[2],n[3],1):(n=l.exec(t))?new M(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=_.exec(t))?v(n[1],n[2],n[3],n[4]):(n=d.exec(t))?v(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=p.exec(t))?T(n[1],n[2]/100,n[3]/100,1):(n=b.exec(t))?T(n[1],n[2]/100,n[3]/100,n[4]):y.hasOwnProperty(t)?x(y[t]):"transparent"===t?new M(NaN,NaN,NaN,0):null}function x(t){return new M(t>>16&255,t>>8&255,255&t,1)}function v(t,n,e,i){return i<=0&&(t=n=e=NaN),new M(t,n,e,i)}function m(t){return t instanceof a||(t=g(t)),t?new M((t=t.rgb()).r,t.g,t.b,t.opacity):new M}function w(t,n,e,i){return 1===arguments.length?m(t):new M(t,n,e,null==i?1:i)}function M(t,n,e,i){this.r=+t,this.g=+n,this.b=+e,this.opacity=+i}function T(t,n,e,i){return i<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new k(t,n,e,i)}function N(t,n,e,i){return 1===arguments.length?function(t){if(t instanceof k)return new k(t.h,t.s,t.l,t.opacity);if(t instanceof a||(t=g(t)),!t)return new k;if(t instanceof k)return t;var n=(t=t.rgb()).r/255,e=t.g/255,i=t.b/255,r=Math.min(n,e,i),o=Math.max(n,e,i),c=NaN,u=o-r,s=(o+r)/2;return u?(c=n===o?(e-i)/u+6*(e<i):e===o?(i-n)/u+2:(n-e)/u+4,u/=s<.5?o+r:2-o-r,c*=60):u=s>0&&s<1?0:c,new k(c,u,s,t.opacity)}(t):new k(t,n,e,null==i?1:i)}function k(t,n,e,i){this.h=+t,this.s=+n,this.l=+e,this.opacity=+i}function S(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}i(a,g,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),i(M,w,r(a,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new M(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new M(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),i(k,N,r(a,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new k(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new k(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,i=e+(e<.5?e:1-e)*n,r=2*e-i;return new M(S(t>=240?t-240:t+120,r,i),S(t,r,i),S(t<120?t+240:t-120,r,i),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var C=Math.PI/180,A=180/Math.PI,j=.95047,O=1,E=1.08883,U=4/29,D=6/29,P=3*D*D,Y=D*D*D;function F(t){if(t instanceof L)return new L(t.l,t.a,t.b,t.opacity);if(t instanceof I){var n=t.h*C;return new L(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof M||(t=m(t));var e=X(t.r),i=X(t.g),r=X(t.b),a=H((.4124564*e+.3575761*i+.1804375*r)/j),o=H((.2126729*e+.7151522*i+.072175*r)/O);return new L(116*o-16,500*(a-o),200*(o-H((.0193339*e+.119192*i+.9503041*r)/E)),t.opacity)}function q(t,n,e,i){return 1===arguments.length?F(t):new L(t,n,e,null==i?1:i)}function L(t,n,e,i){this.l=+t,this.a=+n,this.b=+e,this.opacity=+i}function H(t){return t>Y?Math.pow(t,1/3):t/P+U}function $(t){return t>D?t*t*t:P*(t-U)}function z(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function X(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function R(t,n,e,i){return 1===arguments.length?function(t){if(t instanceof I)return new I(t.h,t.c,t.l,t.opacity);t instanceof L||(t=F(t));var n=Math.atan2(t.b,t.a)*A;return new I(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new I(t,n,e,null==i?1:i)}function I(t,n,e,i){this.h=+t,this.c=+n,this.l=+e,this.opacity=+i}i(L,q,r(a,{brighter:function(t){return new L(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new L(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=O*$(t),new M(z(3.2404542*(n=j*$(n))-1.5371385*t-.4985314*(e=E*$(e))),z(-.969266*n+1.8760108*t+.041556*e),z(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),i(I,R,r(a,{brighter:function(t){return new I(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new I(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return F(this).rgb()}}));var V=-.14861,Z=1.78277,B=-.29227,W=-.90649,Q=1.97294,J=Q*W,G=Q*Z,K=Z*B-W*V;function tt(t,n,e,i){return 1===arguments.length?function(t){if(t instanceof nt)return new nt(t.h,t.s,t.l,t.opacity);t instanceof M||(t=m(t));var n=t.r/255,e=t.g/255,i=t.b/255,r=(K*i+J*n-G*e)/(K+J-G),a=i-r,o=(Q*(e-r)-B*a)/W,c=Math.sqrt(o*o+a*a)/(Q*r*(1-r)),u=c?Math.atan2(o,a)*A-120:NaN;return new nt(u<0?u+360:u,c,r,t.opacity)}(t):new nt(t,n,e,null==i?1:i)}function nt(t,n,e,i){this.h=+t,this.s=+n,this.l=+e,this.opacity=+i}i(nt,tt,r(a,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new nt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new nt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*C,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),i=Math.cos(t),r=Math.sin(t);return new M(255*(n+e*(V*i+Z*r)),255*(n+e*(B*i+W*r)),255*(n+e*(Q*i)),this.opacity)}})),e.d(n,"a",function(){return g}),e.d(n,"f",function(){return w}),e.d(n,"d",function(){return N}),e.d(n,"e",function(){return q}),e.d(n,"c",function(){return R}),e.d(n,"b",function(){return tt})},function(t,n,e){"use strict";var i=e(3);function r(t,n,e,i,r){var a=t*t,o=a*t;return((1-3*t+3*a-o)*n+(4-6*a+3*o)*e+(1+3*t+3*a-3*o)*i+o*r)/6}var a=function(t){return function(){return t}};function o(t,n){return function(e){return t+e*n}}function c(t,n){var e=n-t;return e?o(t,e>180||e<-180?e-360*Math.round(e/360):e):a(isNaN(t)?n:t)}function u(t){return 1==(t=+t)?s:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(i){return Math.pow(t+i*n,e)}}(n,e,t):a(isNaN(n)?e:n)}}function s(t,n){var e=n-t;return e?o(t,e):a(isNaN(t)?n:t)}var f=function t(n){var e=u(n);function r(t,n){var r=e((t=Object(i.f)(t)).r,(n=Object(i.f)(n)).r),a=e(t.g,n.g),o=e(t.b,n.b),c=s(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=a(n),t.b=o(n),t.opacity=c(n),t+""}}return r.gamma=t,r}(1);function h(t){return function(n){var e,r,a=n.length,o=new Array(a),c=new Array(a),u=new Array(a);for(e=0;e<a;++e)r=Object(i.f)(n[e]),o[e]=r.r||0,c[e]=r.g||0,u[e]=r.b||0;return o=t(o),c=t(c),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=c(t),r.b=u(t),r+""}}}h(function(t){var n=t.length-1;return function(e){var i=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),a=t[i],o=t[i+1],c=i>0?t[i-1]:2*a-o,u=i<n-1?t[i+2]:2*o-a;return r((e-i/n)*n,c,a,o,u)}}),h(function(t){var n=t.length;return function(e){var i=Math.floor(((e%=1)<0?++e:e)*n),a=t[(i+n-1)%n],o=t[i%n],c=t[(i+1)%n],u=t[(i+2)%n];return r((e-i/n)*n,a,o,c,u)}});var l=function(t,n){return n-=t=+t,function(e){return t+n*e}},_=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,d=new RegExp(_.source,"g");var p,b,y,g,x=function(t,n){var e,i,r,a=_.lastIndex=d.lastIndex=0,o=-1,c=[],u=[];for(t+="",n+="";(e=_.exec(t))&&(i=d.exec(n));)(r=i.index)>a&&(r=n.slice(a,r),c[o]?c[o]+=r:c[++o]=r),(e=e[0])===(i=i[0])?c[o]?c[o]+=i:c[++o]=i:(c[++o]=null,u.push({i:o,x:l(e,i)})),a=d.lastIndex;return a<n.length&&(r=n.slice(a),c[o]?c[o]+=r:c[++o]=r),c.length<2?u[0]?function(t){return function(n){return t(n)+""}}(u[0].x):function(t){return function(){return t}}(n):(n=u.length,function(t){for(var e,i=0;i<n;++i)c[(e=u[i]).i]=e.x(t);return c.join("")})},v=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?a(n):("number"===r?l:"string"===r?(e=Object(i.a)(n))?(n=e,f):x:n instanceof i.a?f:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(i){return e.setTime(t+n*i),e}}:Array.isArray(n)?function(t,n){var e,i=n?n.length:0,r=t?Math.min(i,t.length):0,a=new Array(r),o=new Array(i);for(e=0;e<r;++e)a[e]=v(t[e],n[e]);for(;e<i;++e)o[e]=n[e];return function(t){for(e=0;e<r;++e)o[e]=a[e](t);return o}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,i={},r={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?i[e]=v(t[e],n[e]):r[e]=n[e];return function(t){for(e in i)r[e]=i[e](t);return r}}:l)(t,n)},m=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},w=180/Math.PI,M={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},T=function(t,n,e,i,r,a){var o,c,u;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(u=t*e+n*i)&&(e-=t*u,i-=n*u),(c=Math.sqrt(e*e+i*i))&&(e/=c,i/=c,u/=c),t*i<n*e&&(t=-t,n=-n,u=-u,o=-o),{translateX:r,translateY:a,rotate:Math.atan2(n,t)*w,skewX:Math.atan(u)*w,scaleX:o,scaleY:c}};function N(t,n,e,i){function r(t){return t.length?t.pop()+" ":""}return function(a,o){var c=[],u=[];return a=t(a),o=t(o),function(t,i,r,a,o,c){if(t!==r||i!==a){var u=o.push("translate(",null,n,null,e);c.push({i:u-4,x:l(t,r)},{i:u-2,x:l(i,a)})}else(r||a)&&o.push("translate("+r+n+a+e)}(a.translateX,a.translateY,o.translateX,o.translateY,c,u),function(t,n,e,a){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),a.push({i:e.push(r(e)+"rotate(",null,i)-2,x:l(t,n)})):n&&e.push(r(e)+"rotate("+n+i)}(a.rotate,o.rotate,c,u),function(t,n,e,a){t!==n?a.push({i:e.push(r(e)+"skewX(",null,i)-2,x:l(t,n)}):n&&e.push(r(e)+"skewX("+n+i)}(a.skewX,o.skewX,c,u),function(t,n,e,i,a,o){if(t!==e||n!==i){var c=a.push(r(a)+"scale(",null,",",null,")");o.push({i:c-4,x:l(t,e)},{i:c-2,x:l(n,i)})}else 1===e&&1===i||a.push(r(a)+"scale("+e+","+i+")")}(a.scaleX,a.scaleY,o.scaleX,o.scaleY,c,u),a=o=null,function(t){for(var n,e=-1,i=u.length;++e<i;)c[(n=u[e]).i]=n.x(t);return c.join("")}}}var k=N(function(t){return"none"===t?M:(p||(p=document.createElement("DIV"),b=document.documentElement,y=document.defaultView),p.style.transform=t,t=y.getComputedStyle(b.appendChild(p),null).getPropertyValue("transform"),b.removeChild(p),t=t.slice(7,-1).split(","),T(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),S=N(function(t){return null==t?M:(g||(g=document.createElementNS("http://www.w3.org/2000/svg","g")),g.setAttribute("transform",t),(t=g.transform.baseVal.consolidate())?(t=t.matrix,T(t.a,t.b,t.c,t.d,t.e,t.f)):M)},", ",")",")"),C=Math.SQRT2;function A(t){return((t=Math.exp(t))+1/t)/2}var j=function(t,n){var e,i,r=t[0],a=t[1],o=t[2],c=n[0],u=n[1],s=n[2],f=c-r,h=u-a,l=f*f+h*h;if(l<1e-12)i=Math.log(s/o)/C,e=function(t){return[r+t*f,a+t*h,o*Math.exp(C*t*i)]};else{var _=Math.sqrt(l),d=(s*s-o*o+4*l)/(2*o*2*_),p=(s*s-o*o-4*l)/(2*s*2*_),b=Math.log(Math.sqrt(d*d+1)-d),y=Math.log(Math.sqrt(p*p+1)-p);i=(y-b)/C,e=function(t){var n,e=t*i,c=A(b),u=o/(2*_)*(c*(n=C*e+b,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(b));return[r+u*f,a+u*h,o*c/A(C*e+b)]}}return e.duration=1e3*i,e};function O(t){return function(n,e){var r=t((n=Object(i.d)(n)).h,(e=Object(i.d)(e)).h),a=s(n.s,e.s),o=s(n.l,e.l),c=s(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=a(t),n.l=o(t),n.opacity=c(t),n+""}}}O(c),O(s);function E(t){return function(n,e){var r=t((n=Object(i.c)(n)).h,(e=Object(i.c)(e)).h),a=s(n.c,e.c),o=s(n.l,e.l),c=s(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=a(t),n.l=o(t),n.opacity=c(t),n+""}}}E(c),E(s);function U(t){return function n(e){function r(n,r){var a=t((n=Object(i.b)(n)).h,(r=Object(i.b)(r)).h),o=s(n.s,r.s),c=s(n.l,r.l),u=s(n.opacity,r.opacity);return function(t){return n.h=a(t),n.s=o(t),n.l=c(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}U(c);var D=U(s);e.d(n,"a",function(){return v}),e.d(n,"c",function(){return l}),e.d(n,"e",function(){return m}),e.d(n,"f",function(){return x}),e.d(n,"g",function(){return k}),e.d(n,"h",function(){return S}),e.d(n,"i",function(){return j}),e.d(n,"d",function(){return f}),e.d(n,"b",function(){return D})},function(t,n,e){"use strict";var i=Math.PI,r=2*i,a=r-1e-6;function o(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function c(){return new o}o.prototype=c.prototype={constructor:o,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,i){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+i)},bezierCurveTo:function(t,n,e,i,r,a){this._+="C"+ +t+","+ +n+","+ +e+","+ +i+","+(this._x1=+r)+","+(this._y1=+a)},arcTo:function(t,n,e,r,a){t=+t,n=+n,e=+e,r=+r,a=+a;var o=this._x1,c=this._y1,u=e-t,s=r-n,f=o-t,h=c-n,l=f*f+h*h;if(a<0)throw new Error("negative radius: "+a);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(h*u-s*f)>1e-6&&a){var _=e-o,d=r-c,p=u*u+s*s,b=_*_+d*d,y=Math.sqrt(p),g=Math.sqrt(l),x=a*Math.tan((i-Math.acos((p+l-b)/(2*y*g)))/2),v=x/g,m=x/y;Math.abs(v-1)>1e-6&&(this._+="L"+(t+v*f)+","+(n+v*h)),this._+="A"+a+","+a+",0,0,"+ +(h*_>f*d)+","+(this._x1=t+m*u)+","+(this._y1=n+m*s)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,o,c,u){t=+t,n=+n;var s=(e=+e)*Math.cos(o),f=e*Math.sin(o),h=t+s,l=n+f,_=1^u,d=u?o-c:c-o;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+h+","+l:(Math.abs(this._x1-h)>1e-6||Math.abs(this._y1-l)>1e-6)&&(this._+="L"+h+","+l),e&&(d<0&&(d=d%r+r),d>a?this._+="A"+e+","+e+",0,1,"+_+","+(t-s)+","+(n-f)+"A"+e+","+e+",0,1,"+_+","+(this._x1=h)+","+(this._y1=l):d>1e-6&&(this._+="A"+e+","+e+",0,"+ +(d>=i)+","+_+","+(this._x1=t+e*Math.cos(c))+","+(this._y1=n+e*Math.sin(c))))},rect:function(t,n,e,i){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +i+"h"+-e+"Z"},toString:function(){return this._}};var u=c;e.d(n,"a",function(){return u})},function(t,n,e){"use strict";var i,r=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,i=t.slice(0,e);return[i.length>1?i[0]+i.slice(2):i,+t.slice(e+1)]},a=function(t){return(t=r(Math.abs(t)))?t[1]:NaN},o=function(t,n){var e=r(t,n);if(!e)return t+"";var i=e[0],a=e[1];return a<0?"0."+new Array(-a).join("0")+i:i.length>a+1?i.slice(0,a+1)+"."+i.slice(a+1):i+new Array(a-i.length+2).join("0")},c={"":function(t,n){t:for(var e,i=(t=t.toPrecision(n)).length,r=1,a=-1;r<i;++r)switch(t[r]){case".":a=e=r;break;case"0":0===a&&(a=r),e=r;break;case"e":break t;default:a>0&&(a=0)}return a>0?t.slice(0,a)+t.slice(e+1):t},"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return o(100*t,n)},r:o,s:function(t,n){var e=r(t,n);if(!e)return t+"";var a=e[0],o=e[1],c=o-(i=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,u=a.length;return c===u?a:c>u?a+new Array(c-u+1).join("0"):c>0?a.slice(0,c)+"."+a.slice(c):"0."+new Array(1-c).join("0")+r(t,Math.max(0,n+c-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},u=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function s(t){return new f(t)}function f(t){if(!(n=u.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",i=n[2]||">",r=n[3]||"-",a=n[4]||"",o=!!n[5],s=n[6]&&+n[6],f=!!n[7],h=n[8]&&+n[8].slice(1),l=n[9]||"";"n"===l?(f=!0,l="g"):c[l]||(l=""),(o||"0"===e&&"="===i)&&(o=!0,e="0",i="="),this.fill=e,this.align=i,this.sign=r,this.symbol=a,this.zero=o,this.width=s,this.comma=f,this.precision=h,this.type=l}s.prototype=f.prototype,f.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var h,l,_,d=function(t){return t},p=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];h=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,i){for(var r=t.length,a=[],o=0,c=n[0],u=0;r>0&&c>0&&(u+c+1>i&&(c=Math.max(1,i-u)),a.push(t.substring(r-=c,r+c)),!((u+=c+1)>i));)c=n[o=(o+1)%n.length];return a.reverse().join(e)}):d,o=t.currency,u=t.decimal,f=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):d,h=t.percent||"%";function l(t){var n=(t=s(t)).fill,e=t.align,a=t.sign,l=t.symbol,_=t.zero,d=t.width,b=t.comma,y=t.precision,g=t.type,x="$"===l?o[0]:"#"===l&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",v="$"===l?o[1]:/[%p]/.test(g)?h:"",m=c[g],w=!g||/[defgprs%]/.test(g);function M(t){var o,c,s,h=x,l=v;if("c"===g)l=m(t)+l,t="";else{var M=(t=+t)<0;if(t=m(Math.abs(t),y),M&&0==+t&&(M=!1),h=(M?"("===a?a:"-":"-"===a||"("===a?"":a)+h,l=("s"===g?p[8+i/3]:"")+l+(M&&"("===a?")":""),w)for(o=-1,c=t.length;++o<c;)if(48>(s=t.charCodeAt(o))||s>57){l=(46===s?u+t.slice(o+1):t.slice(o))+l,t=t.slice(0,o);break}}b&&!_&&(t=r(t,1/0));var T=h.length+t.length+l.length,N=T<d?new Array(d-T+1).join(n):"";switch(b&&_&&(t=r(N+t,N.length?d-l.length:1/0),N=""),e){case"<":t=h+t+l+N;break;case"=":t=h+N+t+l;break;case"^":t=N.slice(0,T=N.length>>1)+h+t+l+N.slice(T);break;default:t=N+h+t+l}return f(t)}return y=null==y?g?6:12:/[gprs]/.test(g)?Math.max(1,Math.min(21,y)):Math.max(0,Math.min(20,y)),M.toString=function(){return t+""},M}return{format:l,formatPrefix:function(t,n){var e=l(((t=s(t)).type="f",t)),i=3*Math.max(-8,Math.min(8,Math.floor(a(n)/3))),r=Math.pow(10,-i),o=p[8+i/3];return function(t){return e(r*t)+o}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),l=h.format,_=h.formatPrefix;var b=function(t){return Math.max(0,-a(Math.abs(t)))},y=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(a(n)/3)))-a(Math.abs(t)))},g=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,a(n)-a(t))+1};e.d(n,"a",function(){return l}),e.d(n,"b",function(){return _}),e.d(n,"c",function(){return s}),e.d(n,"d",function(){return b}),e.d(n,"e",function(){return y}),e.d(n,"f",function(){return g})},function(t,n,e){"use strict";function i(){}function r(t,n){var e=new i;if(t instanceof i)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,a=-1,o=t.length;if(null==n)for(;++a<o;)e.set(a,t[a]);else for(;++a<o;)e.set(n(r=t[a],a,t),r)}else if(t)for(var c in t)e.set(c,t[c]);return e}i.prototype=r.prototype={constructor:i,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var a=r;function o(){}var c=a.prototype;function u(t,n){var e=new o;if(t instanceof o)t.each(function(t){e.add(t)});else if(t){var i=-1,r=t.length;if(null==n)for(;++i<r;)e.add(t[i]);else for(;++i<r;)e.add(n(t[i],i,t))}return e}o.prototype=u.prototype={constructor:o,has:c.has,add:function(t){return this["$"+(t+="")]=t,this},remove:c.remove,clear:c.clear,values:c.keys,size:c.size,empty:c.empty,each:c.each};e.d(n,"a",function(){return a})},,function(t,n,e){"use strict";var i=e(1);function r(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function a(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function o(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var c,u,s,f,h={"-":"",_:" ",0:"0"},l=/^\s*\d+/,_=/^%/,d=/[\\^$*+?|[\]().{}]/g;function p(t,n,e){var i=t<0?"-":"",r=(i?-t:t)+"",a=r.length;return i+(a<e?new Array(e-a+1).join(n)+r:r)}function b(t){return t.replace(d,"\\$&")}function y(t){return new RegExp("^(?:"+t.map(b).join("|")+")","i")}function g(t){for(var n={},e=-1,i=t.length;++e<i;)n[t[e].toLowerCase()]=e;return n}function x(t,n,e){var i=l.exec(n.slice(e,e+1));return i?(t.w=+i[0],e+i[0].length):-1}function v(t,n,e){var i=l.exec(n.slice(e,e+1));return i?(t.u=+i[0],e+i[0].length):-1}function m(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.U=+i[0],e+i[0].length):-1}function w(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.V=+i[0],e+i[0].length):-1}function M(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.W=+i[0],e+i[0].length):-1}function T(t,n,e){var i=l.exec(n.slice(e,e+4));return i?(t.y=+i[0],e+i[0].length):-1}function N(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.y=+i[0]+(+i[0]>68?1900:2e3),e+i[0].length):-1}function k(t,n,e){var i=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return i?(t.Z=i[1]?0:-(i[2]+(i[3]||"00")),e+i[0].length):-1}function S(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.m=i[0]-1,e+i[0].length):-1}function C(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.d=+i[0],e+i[0].length):-1}function A(t,n,e){var i=l.exec(n.slice(e,e+3));return i?(t.m=0,t.d=+i[0],e+i[0].length):-1}function j(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.H=+i[0],e+i[0].length):-1}function O(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.M=+i[0],e+i[0].length):-1}function E(t,n,e){var i=l.exec(n.slice(e,e+2));return i?(t.S=+i[0],e+i[0].length):-1}function U(t,n,e){var i=l.exec(n.slice(e,e+3));return i?(t.L=+i[0],e+i[0].length):-1}function D(t,n,e){var i=l.exec(n.slice(e,e+6));return i?(t.L=Math.floor(i[0]/1e3),e+i[0].length):-1}function P(t,n,e){var i=_.exec(n.slice(e,e+1));return i?e+i[0].length:-1}function Y(t,n,e){var i=l.exec(n.slice(e));return i?(t.Q=+i[0],e+i[0].length):-1}function F(t,n,e){var i=l.exec(n.slice(e));return i?(t.Q=1e3*+i[0],e+i[0].length):-1}function q(t,n){return p(t.getDate(),n,2)}function L(t,n){return p(t.getHours(),n,2)}function H(t,n){return p(t.getHours()%12||12,n,2)}function $(t,n){return p(1+i.a.count(Object(i.k)(t),t),n,3)}function z(t,n){return p(t.getMilliseconds(),n,3)}function X(t,n){return z(t,n)+"000"}function R(t,n){return p(t.getMonth()+1,n,2)}function I(t,n){return p(t.getMinutes(),n,2)}function V(t,n){return p(t.getSeconds(),n,2)}function Z(t){var n=t.getDay();return 0===n?7:n}function B(t,n){return p(i.h.count(Object(i.k)(t),t),n,2)}function W(t,n){var e=t.getDay();return t=e>=4||0===e?Object(i.i)(t):i.i.ceil(t),p(i.i.count(Object(i.k)(t),t)+(4===Object(i.k)(t).getDay()),n,2)}function Q(t){return t.getDay()}function J(t,n){return p(i.e.count(Object(i.k)(t),t),n,2)}function G(t,n){return p(t.getFullYear()%100,n,2)}function K(t,n){return p(t.getFullYear()%1e4,n,4)}function tt(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+p(n/60|0,"0",2)+p(n%60,"0",2)}function nt(t,n){return p(t.getUTCDate(),n,2)}function et(t,n){return p(t.getUTCHours(),n,2)}function it(t,n){return p(t.getUTCHours()%12||12,n,2)}function rt(t,n){return p(1+i.l.count(Object(i.v)(t),t),n,3)}function at(t,n){return p(t.getUTCMilliseconds(),n,3)}function ot(t,n){return at(t,n)+"000"}function ct(t,n){return p(t.getUTCMonth()+1,n,2)}function ut(t,n){return p(t.getUTCMinutes(),n,2)}function st(t,n){return p(t.getUTCSeconds(),n,2)}function ft(t){var n=t.getUTCDay();return 0===n?7:n}function ht(t,n){return p(i.s.count(Object(i.v)(t),t),n,2)}function lt(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Object(i.t)(t):i.t.ceil(t),p(i.t.count(Object(i.v)(t),t)+(4===Object(i.v)(t).getUTCDay()),n,2)}function _t(t){return t.getUTCDay()}function dt(t,n){return p(i.p.count(Object(i.v)(t),t),n,2)}function pt(t,n){return p(t.getUTCFullYear()%100,n,2)}function bt(t,n){return p(t.getUTCFullYear()%1e4,n,4)}function yt(){return"+0000"}function gt(){return"%"}function xt(t){return+t}function vt(t){return Math.floor(+t/1e3)}c=function(t){var n=t.dateTime,e=t.date,c=t.time,u=t.periods,s=t.days,f=t.shortDays,l=t.months,_=t.shortMonths,d=y(u),p=g(u),b=y(s),mt=g(s),wt=y(f),Mt=g(f),Tt=y(l),Nt=g(l),kt=y(_),St=g(_),Ct={a:function(t){return f[t.getDay()]},A:function(t){return s[t.getDay()]},b:function(t){return _[t.getMonth()]},B:function(t){return l[t.getMonth()]},c:null,d:q,e:q,f:X,H:L,I:H,j:$,L:z,m:R,M:I,p:function(t){return u[+(t.getHours()>=12)]},Q:xt,s:vt,S:V,u:Z,U:B,V:W,w:Q,W:J,x:null,X:null,y:G,Y:K,Z:tt,"%":gt},At={a:function(t){return f[t.getUTCDay()]},A:function(t){return s[t.getUTCDay()]},b:function(t){return _[t.getUTCMonth()]},B:function(t){return l[t.getUTCMonth()]},c:null,d:nt,e:nt,f:ot,H:et,I:it,j:rt,L:at,m:ct,M:ut,p:function(t){return u[+(t.getUTCHours()>=12)]},Q:xt,s:vt,S:st,u:ft,U:ht,V:lt,w:_t,W:dt,x:null,X:null,y:pt,Y:bt,Z:yt,"%":gt},jt={a:function(t,n,e){var i=wt.exec(n.slice(e));return i?(t.w=Mt[i[0].toLowerCase()],e+i[0].length):-1},A:function(t,n,e){var i=b.exec(n.slice(e));return i?(t.w=mt[i[0].toLowerCase()],e+i[0].length):-1},b:function(t,n,e){var i=kt.exec(n.slice(e));return i?(t.m=St[i[0].toLowerCase()],e+i[0].length):-1},B:function(t,n,e){var i=Tt.exec(n.slice(e));return i?(t.m=Nt[i[0].toLowerCase()],e+i[0].length):-1},c:function(t,e,i){return Ut(t,n,e,i)},d:C,e:C,f:D,H:j,I:j,j:A,L:U,m:S,M:O,p:function(t,n,e){var i=d.exec(n.slice(e));return i?(t.p=p[i[0].toLowerCase()],e+i[0].length):-1},Q:Y,s:F,S:E,u:v,U:m,V:w,w:x,W:M,x:function(t,n,i){return Ut(t,e,n,i)},X:function(t,n,e){return Ut(t,c,n,e)},y:N,Y:T,Z:k,"%":P};function Ot(t,n){return function(e){var i,r,a,o=[],c=-1,u=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++c<s;)37===t.charCodeAt(c)&&(o.push(t.slice(u,c)),null!=(r=h[i=t.charAt(++c)])?i=t.charAt(++c):r="e"===i?" ":"0",(a=n[i])&&(i=a(e,r)),o.push(i),u=c+1);return o.push(t.slice(u,c)),o.join("")}}function Et(t,n){return function(e){var r,c,u=o(1900);if(Ut(u,t,e+="",0)!=e.length)return null;if("Q"in u)return new Date(u.Q);if("p"in u&&(u.H=u.H%12+12*u.p),"V"in u){if(u.V<1||u.V>53)return null;"w"in u||(u.w=1),"Z"in u?(c=(r=a(o(u.y))).getUTCDay(),r=c>4||0===c?i.p.ceil(r):Object(i.p)(r),r=i.l.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(c=(r=n(o(u.y))).getDay(),r=c>4||0===c?i.e.ceil(r):Object(i.e)(r),r=i.a.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else("W"in u||"U"in u)&&("w"in u||(u.w="u"in u?u.u%7:"W"in u?1:0),c="Z"in u?a(o(u.y)).getUTCDay():n(o(u.y)).getDay(),u.m=0,u.d="W"in u?(u.w+6)%7+7*u.W-(c+5)%7:u.w+7*u.U-(c+6)%7);return"Z"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,a(u)):n(u)}}function Ut(t,n,e,i){for(var r,a,o=0,c=n.length,u=e.length;o<c;){if(i>=u)return-1;if(37===(r=n.charCodeAt(o++))){if(r=n.charAt(o++),!(a=jt[r in h?n.charAt(o++):r])||(i=a(t,e,i))<0)return-1}else if(r!=e.charCodeAt(i++))return-1}return i}return Ct.x=Ot(e,Ct),Ct.X=Ot(c,Ct),Ct.c=Ot(n,Ct),At.x=Ot(e,At),At.X=Ot(c,At),At.c=Ot(n,At),{format:function(t){var n=Ot(t+="",Ct);return n.toString=function(){return t},n},parse:function(t){var n=Et(t+="",r);return n.toString=function(){return t},n},utcFormat:function(t){var n=Ot(t+="",At);return n.toString=function(){return t},n},utcParse:function(t){var n=Et(t,a);return n.toString=function(){return t},n}}}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),u=c.format,c.parse,s=c.utcFormat,f=c.utcParse;Date.prototype.toISOString||s("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||f("%Y-%m-%dT%H:%M:%S.%LZ");e.d(n,"a",function(){return u}),e.d(n,"b",function(){return s})},function(t,n,e){"use strict";var i=e(5),r=function(t){return function(){return t}},a=Math.abs,o=Math.atan2,c=Math.cos,u=Math.max,s=Math.min,f=Math.sin,h=Math.sqrt,l=1e-12,_=Math.PI,d=_/2,p=2*_;function b(t){return t>=1?d:t<=-1?-d:Math.asin(t)}function y(t){return t.innerRadius}function g(t){return t.outerRadius}function x(t){return t.startAngle}function v(t){return t.endAngle}function m(t){return t&&t.padAngle}function w(t,n,e,i,r,a,o){var c=t-e,s=n-i,f=(o?a:-a)/h(c*c+s*s),l=f*s,_=-f*c,d=t+l,p=n+_,b=e+l,y=i+_,g=(d+b)/2,x=(p+y)/2,v=b-d,m=y-p,w=v*v+m*m,M=r-a,T=d*y-b*p,N=(m<0?-1:1)*h(u(0,M*M*w-T*T)),k=(T*m-v*N)/w,S=(-T*v-m*N)/w,C=(T*m+v*N)/w,A=(-T*v+m*N)/w,j=k-g,O=S-x,E=C-g,U=A-x;return j*j+O*O>E*E+U*U&&(k=C,S=A),{cx:k,cy:S,x01:-l,y01:-_,x11:k*(r/M-1),y11:S*(r/M-1)}}var M=function(){var t=y,n=g,e=r(0),u=null,M=x,T=v,N=m,k=null;function S(){var r,y,g,x=+t.apply(this,arguments),v=+n.apply(this,arguments),m=M.apply(this,arguments)-d,S=T.apply(this,arguments)-d,C=a(S-m),A=S>m;if(k||(k=r=Object(i.a)()),v<x&&(y=v,v=x,x=y),v>l)if(C>p-l)k.moveTo(v*c(m),v*f(m)),k.arc(0,0,v,m,S,!A),x>l&&(k.moveTo(x*c(S),x*f(S)),k.arc(0,0,x,S,m,A));else{var j,O,E=m,U=S,D=m,P=S,Y=C,F=C,q=N.apply(this,arguments)/2,L=q>l&&(u?+u.apply(this,arguments):h(x*x+v*v)),H=s(a(v-x)/2,+e.apply(this,arguments)),$=H,z=H;if(L>l){var X=b(L/x*f(q)),R=b(L/v*f(q));(Y-=2*X)>l?(D+=X*=A?1:-1,P-=X):(Y=0,D=P=(m+S)/2),(F-=2*R)>l?(E+=R*=A?1:-1,U-=R):(F=0,E=U=(m+S)/2)}var I=v*c(E),V=v*f(E),Z=x*c(P),B=x*f(P);if(H>l){var W=v*c(U),Q=v*f(U),J=x*c(D),G=x*f(D);if(C<_){var K=Y>l?function(t,n,e,i,r,a,o,c){var u=e-t,s=i-n,f=o-r,h=c-a,l=(f*(n-a)-h*(t-r))/(h*u-f*s);return[t+l*u,n+l*s]}(I,V,J,G,W,Q,Z,B):[Z,B],tt=I-K[0],nt=V-K[1],et=W-K[0],it=Q-K[1],rt=1/f(((g=(tt*et+nt*it)/(h(tt*tt+nt*nt)*h(et*et+it*it)))>1?0:g<-1?_:Math.acos(g))/2),at=h(K[0]*K[0]+K[1]*K[1]);$=s(H,(x-at)/(rt-1)),z=s(H,(v-at)/(rt+1))}}F>l?z>l?(j=w(J,G,I,V,v,z,A),O=w(W,Q,Z,B,v,z,A),k.moveTo(j.cx+j.x01,j.cy+j.y01),z<H?k.arc(j.cx,j.cy,z,o(j.y01,j.x01),o(O.y01,O.x01),!A):(k.arc(j.cx,j.cy,z,o(j.y01,j.x01),o(j.y11,j.x11),!A),k.arc(0,0,v,o(j.cy+j.y11,j.cx+j.x11),o(O.cy+O.y11,O.cx+O.x11),!A),k.arc(O.cx,O.cy,z,o(O.y11,O.x11),o(O.y01,O.x01),!A))):(k.moveTo(I,V),k.arc(0,0,v,E,U,!A)):k.moveTo(I,V),x>l&&Y>l?$>l?(j=w(Z,B,W,Q,x,-$,A),O=w(I,V,J,G,x,-$,A),k.lineTo(j.cx+j.x01,j.cy+j.y01),$<H?k.arc(j.cx,j.cy,$,o(j.y01,j.x01),o(O.y01,O.x01),!A):(k.arc(j.cx,j.cy,$,o(j.y01,j.x01),o(j.y11,j.x11),!A),k.arc(0,0,x,o(j.cy+j.y11,j.cx+j.x11),o(O.cy+O.y11,O.cx+O.x11),A),k.arc(O.cx,O.cy,$,o(O.y11,O.x11),o(O.y01,O.x01),!A))):k.arc(0,0,x,P,D,A):k.lineTo(Z,B)}else k.moveTo(0,0);if(k.closePath(),r)return k=null,r+""||null}return S.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,i=(+M.apply(this,arguments)+ +T.apply(this,arguments))/2-_/2;return[c(i)*e,f(i)*e]},S.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:r(+n),S):t},S.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:r(+t),S):n},S.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:r(+t),S):e},S.padRadius=function(t){return arguments.length?(u=null==t?null:"function"==typeof t?t:r(+t),S):u},S.startAngle=function(t){return arguments.length?(M="function"==typeof t?t:r(+t),S):M},S.endAngle=function(t){return arguments.length?(T="function"==typeof t?t:r(+t),S):T},S.padAngle=function(t){return arguments.length?(N="function"==typeof t?t:r(+t),S):N},S.context=function(t){return arguments.length?(k=null==t?null:t,S):k},S};function T(t){this._context=t}T.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var N=function(t){return new T(t)};function k(t){return t[0]}function S(t){return t[1]}var C=function(){var t=k,n=S,e=r(!0),a=null,o=N,c=null;function u(r){var u,s,f,h=r.length,l=!1;for(null==a&&(c=o(f=Object(i.a)())),u=0;u<=h;++u)!(u<h&&e(s=r[u],u,r))===l&&((l=!l)?c.lineStart():c.lineEnd()),l&&c.point(+t(s,u,r),+n(s,u,r));if(f)return c=null,f+""||null}return u.x=function(n){return arguments.length?(t="function"==typeof n?n:r(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:r(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:r(!!t),u):e},u.curve=function(t){return arguments.length?(o=t,null!=a&&(c=o(a)),u):o},u.context=function(t){return arguments.length?(null==t?a=c=null:c=o(a=t),u):a},u},A=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},j=function(t){return t},O=function(){var t=j,n=A,e=null,i=r(0),a=r(p),o=r(0);function c(r){var c,u,s,f,h,l=r.length,_=0,d=new Array(l),b=new Array(l),y=+i.apply(this,arguments),g=Math.min(p,Math.max(-p,a.apply(this,arguments)-y)),x=Math.min(Math.abs(g)/l,o.apply(this,arguments)),v=x*(g<0?-1:1);for(c=0;c<l;++c)(h=b[d[c]=c]=+t(r[c],c,r))>0&&(_+=h);for(null!=n?d.sort(function(t,e){return n(b[t],b[e])}):null!=e&&d.sort(function(t,n){return e(r[t],r[n])}),c=0,s=_?(g-l*v)/_:0;c<l;++c,y=f)u=d[c],f=y+((h=b[u])>0?h*s:0)+v,b[u]={data:r[u],index:c,value:h,startAngle:y,endAngle:f,padAngle:x};return b}return c.value=function(n){return arguments.length?(t="function"==typeof n?n:r(+n),c):t},c.sortValues=function(t){return arguments.length?(n=t,e=null,c):n},c.sort=function(t){return arguments.length?(e=t,n=null,c):e},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:r(+t),c):i},c.endAngle=function(t){return arguments.length?(a="function"==typeof t?t:r(+t),c):a},c.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:r(+t),c):o},c};U(N);function E(t){this._curve=t}function U(t){function n(n){return new E(t(n))}return n._curve=t,n}E.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};Array.prototype.slice;Math.sqrt(1/3);var D=Math.sin(_/10)/Math.sin(7*_/10),P=(Math.sin(p/10),Math.cos(p/10),Math.sqrt(3),Math.sqrt(3),Math.sqrt(12),function(){});function Y(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function F(t){this._context=t}F.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Y(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Y(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};function q(t){this._context=t}q.prototype={areaStart:P,areaEnd:P,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Y(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};function L(t){this._context=t}L.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,i=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,i):this._context.moveTo(e,i);break;case 3:this._point=4;default:Y(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};function H(t,n){this._basis=new F(t),this._beta=n}H.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var i,r=t[0],a=n[0],o=t[e]-r,c=n[e]-a,u=-1;++u<=e;)i=u/e,this._basis.point(this._beta*t[u]+(1-this._beta)*(r+i*o),this._beta*n[u]+(1-this._beta)*(a+i*c));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};(function t(n){function e(t){return 1===n?new F(t):new H(t,n)}return e.beta=function(n){return t(+n)},e})(.85);function $(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function z(t,n){this._context=t,this._k=(1-n)/6}z.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:$(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:$(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return new z(t,n)}return e.tension=function(n){return t(+n)},e})(0);function X(t,n){this._context=t,this._k=(1-n)/6}X.prototype={areaStart:P,areaEnd:P,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:$(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return new X(t,n)}return e.tension=function(n){return t(+n)},e})(0);function R(t,n){this._context=t,this._k=(1-n)/6}R.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:$(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return new R(t,n)}return e.tension=function(n){return t(+n)},e})(0);function I(t,n,e){var i=t._x1,r=t._y1,a=t._x2,o=t._y2;if(t._l01_a>l){var c=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,u=3*t._l01_a*(t._l01_a+t._l12_a);i=(i*c-t._x0*t._l12_2a+t._x2*t._l01_2a)/u,r=(r*c-t._y0*t._l12_2a+t._y2*t._l01_2a)/u}if(t._l23_a>l){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,f=3*t._l23_a*(t._l23_a+t._l12_a);a=(a*s+t._x1*t._l23_2a-n*t._l12_2a)/f,o=(o*s+t._y1*t._l23_2a-e*t._l12_2a)/f}t._context.bezierCurveTo(i,r,a,o,t._x2,t._y2)}function V(t,n){this._context=t,this._alpha=n}V.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:I(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return n?new V(t,n):new z(t,0)}return e.alpha=function(n){return t(+n)},e})(.5);function Z(t,n){this._context=t,this._alpha=n}Z.prototype={areaStart:P,areaEnd:P,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:I(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return n?new Z(t,n):new X(t,0)}return e.alpha=function(n){return t(+n)},e})(.5);function B(t,n){this._context=t,this._alpha=n}B.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:I(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};(function t(n){function e(t){return n?new B(t,n):new R(t,0)}return e.alpha=function(n){return t(+n)},e})(.5);function W(t){this._context=t}W.prototype={areaStart:P,areaEnd:P,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};function Q(t){return t<0?-1:1}function J(t,n,e){var i=t._x1-t._x0,r=n-t._x1,a=(t._y1-t._y0)/(i||r<0&&-0),o=(e-t._y1)/(r||i<0&&-0),c=(a*r+o*i)/(i+r);return(Q(a)+Q(o))*Math.min(Math.abs(a),Math.abs(o),.5*Math.abs(c))||0}function G(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function K(t,n,e){var i=t._x0,r=t._y0,a=t._x1,o=t._y1,c=(a-i)/3;t._context.bezierCurveTo(i+c,r+c*n,a-c,o-c*e,a,o)}function tt(t){this._context=t}function nt(t){this._context=new et(t)}function et(t){this._context=t}function it(t){this._context=t}function rt(t){var n,e,i=t.length-1,r=new Array(i),a=new Array(i),o=new Array(i);for(r[0]=0,a[0]=2,o[0]=t[0]+2*t[1],n=1;n<i-1;++n)r[n]=1,a[n]=4,o[n]=4*t[n]+2*t[n+1];for(r[i-1]=2,a[i-1]=7,o[i-1]=8*t[i-1]+t[i],n=1;n<i;++n)e=r[n]/a[n-1],a[n]-=e,o[n]-=e*o[n-1];for(r[i-1]=o[i-1]/a[i-1],n=i-2;n>=0;--n)r[n]=(o[n]-r[n+1])/a[n];for(a[i-1]=(t[i]+r[i-1])/2,n=0;n<i-1;++n)a[n]=2*t[n+1]-r[n+1];return[r,a]}tt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:K(this,this._t0,G(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,K(this,G(this,e=J(this,t,n)),e);break;default:K(this,this._t0,e=J(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(nt.prototype=Object.create(tt.prototype)).point=function(t,n){tt.prototype.point.call(this,n,t)},et.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,i,r,a){this._context.bezierCurveTo(n,t,i,e,a,r)}},it.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var i=rt(t),r=rt(n),a=0,o=1;o<e;++a,++o)this._context.bezierCurveTo(i[0][a],r[0][a],i[1][a],r[1][a],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};function at(t,n){this._context=t,this._t=n}at.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};e.d(n,"a",function(){return M}),e.d(n,"b",function(){return C}),e.d(n,"c",function(){return O})},function(t,n,e){"use strict";var i=e(2),r=e(7),a=Array.prototype,o=a.map,c=a.slice,u={name:"implicit"};function s(t){var n=Object(r.a)(),e=[],i=u;function a(r){var a=r+"",o=n.get(a);if(!o){if(i!==u)return i;n.set(a,o=e.push(r))}return t[(o-1)%t.length]}return t=null==t?[]:c.call(t),a.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Object(r.a)();for(var i,o,c=-1,u=t.length;++c<u;)n.has(o=(i=t[c])+"")||n.set(o,e.push(i));return a},a.range=function(n){return arguments.length?(t=c.call(n),a):t.slice()},a.unknown=function(t){return arguments.length?(i=t,a):i},a.copy=function(){return s().domain(e).range(t).unknown(i)},a}function f(){var t,n,e=s().unknown(void 0),r=e.domain,a=e.range,o=[0,1],c=!1,u=0,h=0,l=.5;function _(){var e=r().length,s=o[1]<o[0],f=o[s-0],_=o[1-s];t=(_-f)/Math.max(1,e-u+2*h),c&&(t=Math.floor(t)),f+=(_-f-t*(e-u))*l,n=t*(1-u),c&&(f=Math.round(f),n=Math.round(n));var d=Object(i.g)(e).map(function(n){return f+t*n});return a(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),_()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],_()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],c=!0,_()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(c=!!t,_()):c},e.padding=function(t){return arguments.length?(u=h=Math.max(0,Math.min(1,t)),_()):u},e.paddingInner=function(t){return arguments.length?(u=Math.max(0,Math.min(1,t)),_()):u},e.paddingOuter=function(t){return arguments.length?(h=Math.max(0,Math.min(1,t)),_()):h},e.align=function(t){return arguments.length?(l=Math.max(0,Math.min(1,t)),_()):l},e.copy=function(){return f().domain(r()).range(o).round(c).paddingInner(u).paddingOuter(h).align(l)},_()}var h=e(4),l=function(t){return function(){return t}},_=function(t){return+t},d=[0,1];function p(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:l(n)}function b(t,n,e,i){var r=t[0],a=t[1],o=n[0],c=n[1];return a<r?(r=e(a,r),o=i(c,o)):(r=e(r,a),o=i(o,c)),function(t){return o(r(t))}}function y(t,n,e,r){var a=Math.min(t.length,n.length)-1,o=new Array(a),c=new Array(a),u=-1;for(t[a]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<a;)o[u]=e(t[u],t[u+1]),c[u]=r(n[u],n[u+1]);return function(n){var e=Object(i.b)(t,n,1,a)-1;return c[e](o[e](n))}}function g(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function x(t,n){var e,i,r,a=d,u=d,s=h.a,f=!1;function l(){return e=Math.min(a.length,u.length)>2?y:b,i=r=null,g}function g(n){return(i||(i=e(a,u,f?function(t){return function(n,e){var i=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:i(t)}}}(t):t,s)))(+n)}return g.invert=function(t){return(r||(r=e(u,a,p,f?function(t){return function(n,e){var i=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:i(t)}}}(n):n)))(+t)},g.domain=function(t){return arguments.length?(a=o.call(t,_),l()):a.slice()},g.range=function(t){return arguments.length?(u=c.call(t),l()):u.slice()},g.rangeRound=function(t){return u=c.call(t),s=h.e,l()},g.clamp=function(t){return arguments.length?(f=!!t,l()):f},g.interpolate=function(t){return arguments.length?(s=t,l()):s},l()}var v=e(6),m=function(t,n,e){var r,a=t[0],o=t[t.length-1],c=Object(i.k)(a,o,null==n?10:n);switch((e=Object(v.c)(null==e?",f":e)).type){case"s":var u=Math.max(Math.abs(a),Math.abs(o));return null!=e.precision||isNaN(r=Object(v.e)(c,u))||(e.precision=r),Object(v.b)(e,u);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=Object(v.f)(c,Math.max(Math.abs(a),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=Object(v.d)(c))||(e.precision=r-2*("%"===e.type))}return Object(v.a)(e)};function w(t){var n=t.domain;return t.ticks=function(t){var e=n();return Object(i.l)(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return m(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,a=n(),o=0,c=a.length-1,u=a[o],s=a[c];return s<u&&(r=u,u=s,s=r,r=o,o=c,c=r),(r=Object(i.j)(u,s,e))>0?(u=Math.floor(u/r)*r,s=Math.ceil(s/r)*r,r=Object(i.j)(u,s,e)):r<0&&(u=Math.ceil(u*r)/r,s=Math.floor(s*r)/r,r=Object(i.j)(u,s,e)),r>0?(a[o]=Math.floor(u/r)*r,a[c]=Math.ceil(s/r)*r,n(a)):r<0&&(a[o]=Math.ceil(u*r)/r,a[c]=Math.floor(s*r)/r,n(a)),t},t}function M(){var t=x(p,h.c);return t.copy=function(){return g(t,M())},w(t)}e(1),e(9);var T=function(t){return t.match(/.{6}/g).map(function(t){return"#"+t})},N=(T("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),T("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),T("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),T("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5")),k=e(3);Object(h.b)(Object(k.b)(300,.5,0),Object(k.b)(-240,.5,1)),Object(h.b)(Object(k.b)(-100,.75,.35),Object(k.b)(80,1.5,.8)),Object(h.b)(Object(k.b)(260,.75,.35),Object(k.b)(80,1.5,.8)),Object(k.b)();function S(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}S(T("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),S(T("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),S(T("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),S(T("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));e.d(n,"a",function(){return f}),e.d(n,"b",function(){return M}),e.d(n,"c",function(){return s}),e.d(n,"d",function(){return N})},,,,,function(t,n,e){"use strict";e.r(n);var i=e(10),r=e(11),a=e(0),o=e(2),c=[["小米",60.8],["大米",90.8],["小黑",44.8],["小白",78.8],["小六",39.8]],u=Object(i.c)().value(function(t){return t[1]}),s=Object(i.a)().innerRadius(0).outerRadius(400/3),f=Object(r.c)(r.d),h=Object(a.f)("body").append("svg").attr("width",400).attr("height",400).selectAll("g").data(u(c)).enter().append("g").attr("transform","translate(200, 200)");h.append("path").attr("fill",function(t,n){return f(n)}).attr("d",function(t){return s(t)}),h.append("text").attr("transform",function(t){return"translate("+1.4*s.centroid(t)[0]+", "+1.4*s.centroid(t)[1]+")"}).attr("text-anchor","middle").text(function(t){return(Number(t.value)/Object(o.i)(c,function(t){return t[1]})*100).toFixed(1)+"%"}),h.append("line").attr("stroke","black").attr("x1",function(t){return 2*s.centroid(t)[0]}).attr("y1",function(t){return 2*s.centroid(t)[1]}).attr("x2",function(t){return 2.2*s.centroid(t)[0]}).attr("y2",function(t){return 2.2*s.centroid(t)[1]}),h.append("text").attr("transform",function(t){return"translate("+2.5*s.centroid(t)[0]+", "+2.5*s.centroid(t)[1]+")"}).attr("text-anchor","middle").text(function(t){return t.data[0]})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,